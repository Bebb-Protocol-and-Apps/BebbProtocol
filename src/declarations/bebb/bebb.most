// Version: 1.0.0
type Bridge =
  {
    bridgeType : BridgeType;
    creationTimestamp : Nat64;
    creator : Principal;
    description : Text;
    entitySpecificFields : Text;
    fromEntityId : Text;
    id : Text;
    keywords : [Text];
    listOfEntitySpecificFieldKeys : [Text];
    name : Text;
    owner : Principal;
    settings : BridgeSettings;
    toEntityId : Text
  };
type BridgeLinkStatus = {#CreatedOther; #CreatedOwner};
type BridgeSettings = {};
type BridgeType = {#IsAttachedto; #IsPartOf; #IsRelatedto};
type Entity =
  {
    creationTimestamp : Nat64;
    creator : Principal;
    description : Text;
    entitySpecificFields : Text;
    entityType : EntityType;
    fromIds : EntityAttachedBridges;
    id : Text;
    keywords : [Text];
    listOfEntitySpecificFieldKeys : [Text];
    name : Text;
    owner : Principal;
    previews : [EntityPreview];
    settings : EntitySettings;
    toIds : EntityAttachedBridges
  };
type EntityAttachedBridge =
  {
    bridgeType : BridgeType;
    creationTime : Time;
    id : Text;
    linkStatus : BridgeLinkStatus
  };
type EntityAttachedBridges = [EntityAttachedBridge];
type EntityPreview =
  {previewData : Blob; previewType : EntityPreviewSupportedTypes};
type EntityPreviewSupportedTypes = {#Glb; #Gltf; #Jpg; #Other : Text; #Png};
type EntitySettings = {};
type EntityType = {#Other : Text; #Resource : EntityTypeResourceTypes};
type EntityTypeResourceTypes = {#Content; #DigitalAsset; #Web};
type Time = Int;
actor {
  stable var bridgesStorageStable : [(Text, Bridge)];
  stable var entitiesStorageStable : [(Text, Entity)]
};
